<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2Button5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>